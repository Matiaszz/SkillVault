# NOTE: Before running docker-compose, ensure this file is located in the project root directory (one level above SkillVault/)
# NOTE: The build context is '.', so the Dockerfile path must be relative to the root directory, e.g., Docker/backend/Dockerfile-example
# NOTE: Your project structure should resemble:
#       rootDir/
#         ├── docker-compose.yml
#         ├── Docker/backend/Dockerfile-example
#         └── SkillVault/ (your source code and Maven project files)

services:
  mysql:
    image: mysql:8.0
    container_name: skillvault_mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysqldata:/var/lib/mysql

  app:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    depends_on:
      - mysql
    working_dir: /app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
    entrypoint: ["java", "-jar", "app.jar"]

    healthcheck:
      test: ["CMD", "wget --header=\"Accept: application/json\" --spider --quiet http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysqldata:
